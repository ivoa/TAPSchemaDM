<?xml version="1.0" encoding="UTF-8"?>
<!--Generated by gradle vo-dml tools 2025-08-06T13:07:08.671570047Z-->
<tap:tapschemaModel xmlns:tap="http://ivoa.net/dm/tapschema/v1"
                    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <schema>
      <schema_name>TAP_SCHEMA</schema_name>
      <description>tapschema model</description>
      <tables>
         <table>
            <table_name>schemas</table_name>
            <table_type>table</table_type>
            <utype>tapschema:Schema</utype>
            <description>The schema</description>
            <columns>
               <column>
                  <column_name>TAP_SCHEMA.schemas.schema_name</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>The name of the schema </description>
                  <utype>tapschema:Schema.schema_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.schemas.utype</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>utype</description>
                  <utype>tapschema:Schema.utype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.schemas.description</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>description</description>
                  <utype>tapschema:Schema.description</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.schemas.schema_index</column_name>
                  <!--attribute of primitiveType ivoa:integer-->
                  <datatype>INTEGER</datatype>
                  <description>used to recommend table ordering for clients. Clients
                 may order by index (ascending) so lower index items would appear
                 earlier in a listing.</description>
                  <utype>tapschema:Schema.schema_index</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
            </columns>
            <fkeys/>
         </table>
         <table>
            <table_name>tables</table_name>
            <table_type>table</table_type>
            <utype>tapschema:table</utype>
            <description>The table</description>
            <columns>
               <column>
                  <column_name>TAP_SCHEMA.tables.schema_name</column_name>
                  <!--attribute of primitiveType ivoa:string composite key from tapschema:Schema-->
                  <datatype>VARCHAR</datatype>
                  <description>The name of the schema </description>
                  <utype>tapschema:Schema.schema_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.tables.table_name</column_name>
                  <!--attribute of primitiveType ivoa:string natural key-->
                  <datatype>VARCHAR</datatype>
                  <description>name of the table</description>
                  <utype>tapschema:table.table_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.tables.table_type</column_name>
                  <!--attribute of enumeration tapschema:TableType-->
                  <datatype>VARCHAR</datatype>
                  <description>the type of table</description>
                  <utype>tapschema:table.table_type</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.tables.utype</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>utype</description>
                  <utype>tapschema:table.utype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.tables.description</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>description</description>
                  <utype>tapschema:table.description</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.tables.table_index</column_name>
                  <!--attribute of primitiveType ivoa:integer-->
                  <datatype>INTEGER</datatype>
                  <description>used to recommend table ordering for clients. Clients
                 may order by index (ascending) so lower index items would appear
                 earlier in a listing.</description>
                  <utype>tapschema:table.table_index</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
            </columns>
            <fkeys>
               <foreignKey>
                  <key_id>FK_Schema.tables</key_id>
                  <!--back reference to tapschema:table composition in tapschema:Schema -->
                  <target_table>schemas</target_table>
                  <description>foreign key for tapschema:table composition in tapschema:Schema </description>
                  <utype>tapschema:Schema.tables</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.tables.schema_name</from_column>
                        <target_column>TAP_SCHEMA.schemas.schema_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
            </fkeys>
         </table>
         <table>
            <table_name>columns</table_name>
            <table_type>table</table_type>
            <utype>tapschema:column</utype>
            <description>the column</description>
            <columns>
               <column>
                  <column_name>TAP_SCHEMA.columns.schema_name</column_name>
                  <!--attribute of primitiveType ivoa:string composite key from tapschema:Schema-->
                  <datatype>VARCHAR</datatype>
                  <description>The name of the schema </description>
                  <utype>tapschema:Schema.schema_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.table_name</column_name>
                  <!--attribute of primitiveType ivoa:string composite key from tapschema:table-->
                  <datatype>VARCHAR</datatype>
                  <description>name of the table</description>
                  <utype>tapschema:table.table_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.column_name</column_name>
                  <!--attribute of primitiveType ivoa:string natural key-->
                  <datatype>VARCHAR</datatype>
                  <description>name of the column</description>
                  <utype>tapschema:column.column_name</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.datatype</column_name>
                  <!--attribute of enumeration tapschema:TAPType-->
                  <datatype>VARCHAR</datatype>
                  <description>the type of the column (VOTable semantics)</description>
                  <utype>tapschema:column.datatype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.arraysize</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>the array size of the column</description>
                  <utype>tapschema:column.arraysize</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.xtype</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>the xtype of the column</description>
                  <utype>tapschema:column.xtype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.size</column_name>
                  <!--attribute of primitiveType ivoa:integer-->
                  <datatype>INTEGER</datatype>
                  <description>deprecated in favour of arraysize</description>
                  <utype>tapschema:column.size</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.description</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>a description of the column</description>
                  <utype>tapschema:column.description</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.utype</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>the utype for the column</description>
                  <utype>tapschema:column.utype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.unit</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>the unit for the column (taken from VOUnits)</description>
                  <utype>tapschema:column.unit</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.ucd</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description/>
                  <utype>tapschema:column.ucd</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.indexed</column_name>
                  <!--attribute of primitiveType ivoa:boolean-->
                  <datatype>INTEGER</datatype>
                  <description>does the column have an index</description>
                  <utype>tapschema:column.indexed</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.principal</column_name>
                  <!--attribute of primitiveType ivoa:boolean-->
                  <datatype>INTEGER</datatype>
                  <description> indicates that the column is considered a core part
                 of the content; clients can use this hint to make the principal column(s)
                 visible, for example by selecting them by default in generating an ADQL
                 query. In cases where the service selects the columns to return (such as a
                 query language without an explicit output selection), the principal column
                 indicates those columns that are returned by default</description>
                  <utype>tapschema:column.principal</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.std</column_name>
                  <!--attribute of primitiveType ivoa:boolean-->
                  <datatype>INTEGER</datatype>
                  <description>is the column defined by a standard</description>
                  <utype>tapschema:column.std</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.columns.column_index</column_name>
                  <!--attribute of primitiveType ivoa:integer-->
                  <datatype>INTEGER</datatype>
                  <description>used to recommend table ordering for clients. Clients
                 may order by index (ascending) so lower index items would appear
                 earlier in a listing.</description>
                  <utype>tapschema:column.column_index</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
            </columns>
            <fkeys>
               <foreignKey>
                  <key_id>FK_table.columns</key_id>
                  <!--back reference to tapschema:column composition in tapschema:table -->
                  <target_table>tables</target_table>
                  <description>foreign key for tapschema:column composition in tapschema:table </description>
                  <utype>tapschema:table.columns</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.columns.schema_name</from_column>
                        <target_column>TAP_SCHEMA.tables.schema_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.columns.table_name</from_column>
                        <target_column>TAP_SCHEMA.tables.table_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
            </fkeys>
         </table>
         <table>
            <table_name>keys</table_name>
            <table_type>table</table_type>
            <utype>tapschema:ForeignKey</utype>
            <description>foreign key definition</description>
            <columns>
               <column>
                  <column_name>TAP_SCHEMA.keys.schema_name</column_name>
                  <datatype>VARCHAR</datatype>
                  <description>foreign key column for tapschema:table composition of tapschema:ForeignKey composite key</description>
                  <utype>tapschema:Schema.schema_name</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.from_table</column_name>
                  <datatype>VARCHAR</datatype>
                  <description>foreign key column for tapschema:table composition of tapschema:ForeignKey</description>
                  <utype>tapschema:table</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.key_id</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>the id of the key</description>
                  <utype>tapschema:ForeignKey.key_id</utype>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.target_table_schema_name</column_name>
                  <!--reference to tapschema:table composite key case-->
                  <datatype>VARCHAR</datatype>
                  <description>the target table of the foreign key</description>
                  <utype>tapschema:ForeignKey.target_table</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.target_table</column_name>
                  <!--reference to tapschema:table composite key case - top key-->
                  <datatype>VARCHAR</datatype>
                  <description>the target table of the foreign key</description>
                  <utype>tapschema:ForeignKey.target_table</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.description</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>description</description>
                  <utype>tapschema:ForeignKey.description</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.keys.utype</column_name>
                  <!--attribute of primitiveType ivoa:string-->
                  <datatype>VARCHAR</datatype>
                  <description>utype</description>
                  <utype>tapschema:ForeignKey.utype</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
            </columns>
            <fkeys>
               <foreignKey>
                  <key_id>FK_ForeignKey.target_table</key_id>
                  <!--reference to tapschema:table composite key case-->
                  <target_table>tables</target_table>
                  <description>the target table of the foreign key</description>
                  <utype>tapschema:ForeignKey.target_table</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.keys.target_table_schema_name</from_column>
                        <target_column>TAP_SCHEMA.tables.schema_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.keys.target_table</from_column>
                        <target_column>TAP_SCHEMA.tables.table_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
               <foreignKey>
                  <key_id>FK_table.fkeys</key_id>
                  <!--back reference to tapschema:ForeignKey composition in tapschema:table -->
                  <target_table>tables</target_table>
                  <description>foreign key for tapschema:ForeignKey composition in tapschema:table </description>
                  <utype>tapschema:table.fkeys</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.keys.schema_name</from_column>
                        <target_column>TAP_SCHEMA.tables.schema_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.keys.from_table</from_column>
                        <target_column>TAP_SCHEMA.tables.table_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
            </fkeys>
         </table>
         <table>
            <table_name>key_columns</table_name>
            <table_type>table</table_type>
            <utype>tapschema:FKColumn</utype>
            <description>the foreign key columns</description>
            <columns>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.FKCOLUMN_ID</column_name>
                  <!--primary key (surrogate)-->
                  <datatype>BIGINT</datatype>
                  <description>primary key for key_columns</description>
                  <indexed>true</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.key_id</column_name>
                  <datatype>VARCHAR</datatype>
                  <description>foreign key column for tapschema:ForeignKey composition of tapschema:FKColumn</description>
                  <utype>tapschema:ForeignKey</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.from_column_schema_name</column_name>
                  <!--reference to tapschema:column composite key case-->
                  <datatype>VARCHAR</datatype>
                  <description>the column from which the key is referencing</description>
                  <utype>tapschema:FKColumn.from_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.from_column_table_name</column_name>
                  <!--reference to tapschema:column composite key case-->
                  <datatype>VARCHAR</datatype>
                  <description>the column from which the key is referencing</description>
                  <utype>tapschema:FKColumn.from_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.from_column</column_name>
                  <!--reference to tapschema:column composite key case - top key-->
                  <datatype>VARCHAR</datatype>
                  <description>the column from which the key is referencing</description>
                  <utype>tapschema:FKColumn.from_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.target_column_schema_name</column_name>
                  <!--reference to tapschema:column composite key case-->
                  <datatype>VARCHAR</datatype>
                  <description>the column that the key references</description>
                  <utype>tapschema:FKColumn.target_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.target_column_table_name</column_name>
                  <!--reference to tapschema:column composite key case-->
                  <datatype>VARCHAR</datatype>
                  <description>the column that the key references</description>
                  <utype>tapschema:FKColumn.target_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
               <column>
                  <column_name>TAP_SCHEMA.key_columns.target_column</column_name>
                  <!--reference to tapschema:column composite key case - top key-->
                  <datatype>VARCHAR</datatype>
                  <description>the column that the key references</description>
                  <utype>tapschema:FKColumn.target_column</utype>
                  <indexed>false</indexed>
                  <principal>false</principal>
                  <std>true</std>
               </column>
            </columns>
            <fkeys>
               <foreignKey>
                  <key_id>FK_FKColumn.from_column</key_id>
                  <!--reference to tapschema:column composite key case-->
                  <target_table>columns</target_table>
                  <description>the column from which the key is referencing</description>
                  <utype>tapschema:FKColumn.from_column</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.from_column_schema_name</from_column>
                        <target_column>TAP_SCHEMA.columns.schema_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.from_column_table_name</from_column>
                        <target_column>TAP_SCHEMA.columns.table_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.from_column</from_column>
                        <target_column>TAP_SCHEMA.columns.column_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
               <foreignKey>
                  <key_id>FK_FKColumn.target_column</key_id>
                  <!--reference to tapschema:column composite key case-->
                  <target_table>columns</target_table>
                  <description>the column that the key references</description>
                  <utype>tapschema:FKColumn.target_column</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.target_column_schema_name</from_column>
                        <target_column>TAP_SCHEMA.columns.schema_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.target_column_table_name</from_column>
                        <target_column>TAP_SCHEMA.columns.table_name</target_column>
                     </fKColumn>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.target_column</from_column>
                        <target_column>TAP_SCHEMA.columns.column_name</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
               <foreignKey>
                  <key_id>FK_ForeignKey.columns</key_id>
                  <!--back reference to tapschema:FKColumn composition in tapschema:ForeignKey -->
                  <target_table>keys</target_table>
                  <description>foreign key for tapschema:FKColumn composition in tapschema:ForeignKey </description>
                  <utype>tapschema:ForeignKey.columns</utype>
                  <columns>
                     <fKColumn>
                        <from_column>TAP_SCHEMA.key_columns.key_id</from_column>
                        <target_column>TAP_SCHEMA.keys.key_id</target_column>
                     </fKColumn>
                  </columns>
               </foreignKey>
            </fkeys>
         </table>
      </tables>
   </schema>
</tap:tapschemaModel>
